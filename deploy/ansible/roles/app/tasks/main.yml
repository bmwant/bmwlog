---

- include_vars: "vars/common.yml"

- name: clone project repository
  git:
    repo: "{{ repository_url }}"
    dest: "{{ project_root }}"
    version: "{{ repository_branch }}"
    accept_hostkey: true

- name: create local overrides for project config
  template:
    src: "templates/app_config.py.j2"
    dest: "{{ project_root }}/app/config_local.py"
  notify: gunicorn reload

- name: create local directories for project
  file:
    path: "{{ project_root }}/{{ item }}"
    state: directory
  with_items:
    - "prod"
    - "uploaded"

- name: copy gunicorn config
  template:
    src: templates/gunicorn_settings.py.j2
    dest: "{{ project_root }}/prod/gunicorn_settings.py"
  notify: gunicorn reload

- name: pull latest app image
  docker_image:
    name: "bmwant/bmwlog"
    state: present
    tag: latest
    source: pull
    force_source: yes

- name: apply database migrations
  shell: "{{ project_venv }}/bin/python -m app.migrations"
  args:
    chdir: "{{ project_root }}"
  when: run_migrations

- name: copy nginx config
  template:
    src: "templates/nginx_bmwlog.conf.j2"
    dest: "{{ project_root }}/prod/nginx_bmwlog.conf"
  notify: nginx reload

- name: ensure nginx config linked
  file:
    src: "{{ project_root }}/prod/nginx_bmwlog.conf"
    dest: "/etc/nginx/conf.d/bmwlog.conf"
    state: link
  become: true
